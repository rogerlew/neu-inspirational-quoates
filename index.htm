<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Inspirational Quotes</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 2rem;
      max-width: 600px;
      margin: auto;
    }
    .tiles {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      margin-bottom: 2rem;
    }
    .tile {
      flex: 1;
      min-width: 100px;
      padding: 1rem;
      text-align: center;
      border: 2px solid #333;
      border-radius: 8px;
      cursor: pointer;
      user-select: none;
      transition: background 0.2s, color 0.2s;
    }
    .tile:hover,
    .tile.active {
      background: #333;
      color: #fff;
    }
    #quote {
      font-size: 1.2rem;
      line-height: 1.4;
      padding: 1rem;
      border-top: 1px solid #ccc;
    }

    #footer {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      padding: 1rem;
      background-color: #f5f5f5;
      text-align: center;
      border-top: 1px solid #ddd;
    }
  </style>
</head>
<body>

    <h1 style="text-align: center;">Inspirational Quoates</h1>
    <div class="image-container" style="text-align: center; margin: 1rem 0;">
        <img id="quote-image" src="images/placeholder.jpeg" alt="Quote illustration" style="max-width: 100%; height: auto;">
    </div>
    
  <div class="tiles">
    <div class="tile" data-key="cringe">Cringe Gen Z</div>
    <div class="tile" data-key="stoic">Stoicism</div>
    <div class="tile" data-key="nihil">Nihilism</div>
    <div class="tile" data-key="pokemon">Pokémon</div>
    <div class="tile" data-key="gwash">George Washington</div>
  </div>

  <div id="quote">Click a category above to generate a quoate.</div>

  <div id="footer">
    </div>
  
  <script>
    function mdToHtml(md) {
        return md
            .replace(/\*\*(.+?)\*\*/g, '<strong>$1</strong>')
            .replace(/_(.+?)_/g, '<em>$1</em>')
            .replace(/\n/g, '<br>');
    }
    
    const tiles = document.querySelectorAll('.tile');
    const quoteEl = document.getElementById('quote');
    
    tiles.forEach(tile => {
        tile.addEventListener('click', async () => {
            // Highlight the selected tile
            tiles.forEach(t => t.classList.remove('active'));
            tile.classList.add('active');
    
            // Update the image
            const imageSrc = 'images/' + tile.dataset.key + '.jpeg';
            const imageEl = document.getElementById('quote-image');
            imageEl.src = imageSrc;
            imageEl.alt = tile.textContent;
    
            quoteEl.textContent = 'Generating…';
            const key = tile.dataset.key;
    
            try {
                // Send the category to backend.php
                const formData = new FormData();
                formData.append('category', key);
                
                const res = await fetch('backend.php', {
                    method: 'POST',
                    body: formData
                });
                const json = await res.json();
    
                if (json.error) {
                    throw new Error(json.error);
                }
    
                const text = json.text || 'No response';
                const promptTokens = json.usage?.prompt_tokens || 0;
                const completionTokens = json.usage?.completion_tokens || 0;
                const totalTokens = json.usage?.total_tokens || 0;
    
                // Update the footer with token usage
                const footer = document.getElementById('footer');
                footer.textContent = `Prompt Tokens: ${promptTokens}, Completion Tokens: ${completionTokens}, Total Tokens: ${totalTokens}`;
    
                // Display the formatted quote
                quoteEl.innerHTML = mdToHtml(text);
            } catch (err) {
                console.error(err);
                quoteEl.textContent = 'Error generating quote.';
            }
        });
    });
    </script>

</body>
</html>