<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Inspirational Quotes</title>
  <style>
    body {
      font-family: sans-serif;
      padding: 2rem;
      max-width: 600px;
      margin: auto;
    }
    .tiles {
      display: flex;
      gap: 1rem;
      flex-wrap: wrap;
      margin-bottom: 2rem;
    }
    .tile {
      flex: 1;
      min-width: 100px;
      padding: 1rem;
      text-align: center;
      border: 2px solid #333;
      border-radius: 8px;
      cursor: pointer;
      user-select: none;
      transition: background 0.2s, color 0.2s;
    }
    .tile:hover,
    .tile.active {
      background: #333;
      color: #fff;
    }
    #quote {
      font-size: 1.2rem;
      line-height: 1.4;
      padding: 1rem;
      border-top: 1px solid #ccc;
    }

    #footer {
      position: fixed;
      bottom: 0;
      left: 0;
      width: 100%;
      padding: 1rem;
      background-color: #f5f5f5;
      text-align: center;
      border-top: 1px solid #ddd;
    }
  </style>
</head>
<body>

    <h1 style="text-align: center;">Inspirational Quoates</h1>
    <div class="image-container" style="text-align: center; margin: 1rem 0;">
        <img id="quote-image" src="images/placeholder.jpeg" alt="Quote illustration" style="max-width: 100%; height: auto;">
    </div>
    
  <div class="tiles">
    <div class="tile" data-key="cringe">Cringe Gen Z</div>
    <div class="tile" data-key="stoic">Stoicism</div>
    <div class="tile" data-key="nihil">Nihilism</div>
    <div class="tile" data-key="pokemon">Pokémon</div>
    <div class="tile" data-key="gwash">George Washington</div>
  </div>

  <div id="quote">Click a category above to generate a quoate.</div>

  <div id="footer">
    </div>

  <script>

    function mdToHtml(md) {
        return md
        // **bold**
        .replace(/\*\*(.+?)\*\*/g, '<strong>$1</strong>')
        // _italic_
        .replace(/_(.+?)_/g, '<em>$1</em>')
        // line breaks → <br>
        .replace(/\n/g, '<br>');
    }


    const prompts = {
      cringe:   "You’re a Gen Z meme lord turned life coach. Using viral slang (yeet, no cap, glow-up), craft a brief tongue-in-cheek inspirational quote that pokes fun at everyday cringe but ends on a motivational note.",
      stoic:    "As a modern Stoic philosopher, write a short inspirational quote about accepting what you cannot change, mastering your emotions, and focusing on virtue. Keep it timeless and grounded.",
      nihil:    "From a nihilist’s viewpoint, compose a pithy inspirational quote that acknowledges life’s inherent meaninglessness yet finds freedom or purpose in creating one’s own values.",
      pokemon:  "Channel the voice of a Pokémon Trainer offering pep talk advice. Include a motivational line about teamwork, resilience, and evolving—just like a Pikachu powering up.",
      gwash:    "In the formal 18th-century style of George Washington, write a dignified inspirational quote on leadership, duty, and perseverance. Use “shall”, “therefore”, etc., to evoke his voice."
    };

    const tiles = document.querySelectorAll('.tile');
    const quoteEl = document.getElementById('quote');

    tiles.forEach(tile => {
      tile.addEventListener('click', async () => {
        // highlight
        tiles.forEach(t=>t.classList.remove('active'));
        tile.classList.add('active');

        const imageSrc = 'images/' + tile.dataset.key + '.jpeg';
        const imageEl = document.getElementById('quote-image');
        imageEl.src = imageSrc;
        imageEl.alt = tile.textContent;

        quoteEl.textContent = 'Generating…';
        const key = tile.dataset.key;
        const prompt = prompts[key];

        try {
          const res = await fetch('http://localhost:11434/v1/completions', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              model: 'gemma:2b',
              prompt,
              max_tokens: 80,
              temperature: 0.8
            })
          });
          const json = await res.json();
          const text = json.choices?.[0]?.text?.trim() || 'No response';

          // from usage report token statistics in footer div "usage":{"prompt_tokens":23,"completion_tokens":12,"total_tokens":35}
          const promptTokens = json.usage?.prompt_tokens || 0;
          const completionTokens = json.usage?.completion_tokens || 0;
          const totalTokens = json.usage?.total_tokens || 0;
          const footer = document.getElementById('footer');
          footer.textContent = `Prompt Tokens: ${promptTokens}, Completion Tokens: ${completionTokens}, Total Tokens: ${totalTokens}`;

          quoteEl.innerHTML = mdToHtml(text);
        } catch (err) {
          console.error(err);
          quoteEl.textContent = 'Error generating quote.';
        }
      });
    });
  </script>

</body>
</html>